{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "General",
            "Effect": "Allow",
            "Action": [
                "application-autoscaling:*",
                "ecs:CreateCluster",
                "cloudwatch:DescribeAlarmsForMetric",
                "sns:Unsubscribe",
                "sns:GetSubscriptionAttributes",
                "cloudwatch:ListMetrics",
                "ecs:DescribeTaskDefinition",
                "ecs:DeregisterTaskDefinition",
                "ecs:RegisterTaskDefinition",
                "elasticloadbalancing:Describe*",
                "ec2:Describe*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "S3",
            "Effect": "Allow",
            "Action": [
                "s3:*"
            ],
            "Resource": [
                "arn:aws:s3:::terraform-remote-state-*",
                "arn:aws:s3:::terraform-remote-state-*/*",
                "arn:aws:s3:::sample-app-*",
                "arn:aws:s3:::sample-app-*/*",
                "arn:aws:s3:::upload-bucket-*",
                "arn:aws:s3:::upload-bucket-*/*",
                "arn:aws:s3:::lambda-bucket-*",
                "arn:aws:s3:::lambda-bucket-*/*"
            ]
        },
        {
            "Sid": "ELB",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:CreateRule"
            ],
            "Resource": [
                "arn:aws:elasticloadbalancing:ca-central-1:<account-id>:listener-rule/app/default/*/*/*",
                "arn:aws:elasticloadbalancing:ca-central-1:<account-id>:targetgroup/sample-target-group/*",
                "arn:aws:elasticloadbalancing:ca-central-1:<account-id>:listener/app/default/*"
            ]
        },
        {
            "Sid": "IAM",
            "Effect": "Allow",
            "Action": [
                "iam:CreateRole",
                "iam:AttachRolePolicy",
                "iam:DetachRolePolicy",
                "iam:GetRole",
                "iam:GetPolicy",
                "iam:DeleteRole",
                "iam:GetRolePolicy",
                "iam:TagRole",
                "iam:DeleteRolePolicy",
                "iam:UpdateRole",
                "iam:ListRolePolicies",
                "iam:ListRolePolicies",
                "iam:ListAttachedRolePolicies",
                "iam:ListInstanceProfilesForRole",
                "iam:PutRolePolicy",
                "iam:PassRole"
            ],
            "Resource": [
                "arn:aws:iam::<account-id>:policy/ecs_task_execution_cwlogs",
                "arn:aws:iam::<account-id>:policy/sample_app_container_cwlogs",
                "arn:aws:iam::<account-id>:policy/upload_bucket_policy",
                "arn:aws:iam::<account-id>:policy/sample_app_dynamodb",
                "arn:aws:iam::<account-id>:role/startupSampleEcsTaskExecutionRole",
                "arn:aws:iam::<account-id>:role/sample_app_container_role",
                "arn:aws:iam::<account-id>:role/serverless_lambda*"
            ]
        },
        {
            "Sid": "Budgets",
            "Effect": "Allow",
            "Action": [
                "budgets:ViewBudget",
                "budgets:DescribeBudgetAction",
                "budgets:ModifyBudget"
            ],
            "Resource": [
                "arn:aws:budgets::<account-id>:budget/startup-sample-monthly/action/*",
                "arn:aws:budgets::<account-id>:budget/startup-sample-monthly"
            ]
        },
        {
            "Sid": "Cloudwatch",
            "Effect": "Allow",
            "Action": [
                "cloudwatch:DeleteAlarms",
                "cloudwatch:UntagResource",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DisableAlarmActions",
                "cloudwatch:PutMetricAlarm",
                "cloudwatch:TagResource",
                "cloudwatch:EnableAlarmActions",
                "cloudwatch:ListTagsForResource"
            ],
            "Resource": [
                "arn:aws:cloudwatch:ca-central-1:<account-id>:alarm:sample_cpu_utilization_*",
                "arn:aws:cloudwatch:ca-central-1:<account-id>:insight-rule/*"
            ]
        },
        {
            "Sid": "Dynamodb",
            "Effect": "Allow",
            "Action": [
                "dynamodb:*"
            ],
            "Resource": [
                "arn:aws:dynamodb:ca-central-1:<account-id>:*"
            ]
        },
        {
            "Sid": "Cloudfront",
            "Effect": "Allow",
            "Action": [
                "cloudfront:CreateCachePolicy",
                "cloudfront:GetDistribution",
                "cloudfront:GetDistributionConfig",
                "cloudfront:TagResource",
                "cloudfront:UpdateDistribution",
                "cloudfront:ListTagsForResource",
                "cloudfront:UntagResource",
                "cloudfront:CreateDistribution",
                "cloudfront:DeleteCachePolicy",
                "cloudfront:DeleteDistribution",
                "cloudfront:CreateCloudFrontOriginAccessIdentity",
                "cloudfront:GetCloudFrontOriginAccessIdentity",
                "cloudfront:DeleteCloudFrontOriginAccessIdentity"
            ],
            "Resource": [
                "arn:aws:cloudfront::<account-id>:*"
            ]
        },
        {
            "Sid": "SNS",
            "Effect": "Allow",
            "Action": [
                "sns:Subscribe",
                "sns:GetTopicAttributes",
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:ListTagsForResource",
                "SNS:SetTopicAttributes"
            ],
            "Resource": [
                "arn:aws:sns:ca-central-1:<account-id>:startup-sample-billing-alert-topic"
            ]
        },
        {
            "Sid": "ecs",
            "Effect": "Allow",
            "Action": [
                "ecs:TagResource",
                "ecs:DeleteService",
                "ecs:DeleteCluster",
                "ecs:DescribeClusters",
                "ecs:CreateService",
                "ecs:DescribeServices",
                "ecs:DescribeTasks",
                "ecs:UntagResource",
                "ecs:UpdateService"
            ],
            "Resource": [
                "arn:aws:ecs:ca-central-1:<account-id>:task-set/sample-cluster/sample-service/*",
                "arn:aws:ecs:ca-central-1:<account-id>:cluster/sample-cluster",
                "arn:aws:ecs:ca-central-1:<account-id>:task/sample-cluster/*",
                "arn:aws:ecs:ca-central-1:<account-id>:container-instance/sample-cluster/*",
                "arn:aws:ecs:ca-central-1:<account-id>:task-definition/sample-app-task:*",
                "arn:aws:ecs:ca-central-1:<account-id>:service/sample-cluster/sample-service",
                "arn:aws:ecs:ca-central-1:<account-id>:capacity-provider/FARGATE_SPOT"
            ]
        },
        {
            "Sid": "ec2",
            "Effect": "Allow",
            "Action": [
                "ec2:DeleteSecurityGroup",
                "ec2:CreateSecurityGroup",
                "ec2:ModifySecurityGroupRules",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
                "ec2:CreateTags",
                "ec2:DeleteTags"
            ],
            "Resource": [
                "arn:aws:ec2:ca-central-1:<account-id>:security-group/*",
                "arn:aws:ec2:ca-central-1:<account-id>:vpc/*"
            ]
        },
        {
            "Sid": "lambda",
            "Effect": "Allow",
            "Action": [
                "lambda:*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "APIgateway",
            "Effect": "Allow",
            "Action": [
                "apigateway:*"
            ],
            "Resource": [
                "arn:aws:apigateway:ca-central-1::*"
            ]
        }
    ]
}