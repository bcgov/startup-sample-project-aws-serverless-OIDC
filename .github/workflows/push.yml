name: Deploy on Push

on:
  push:
    branches: [main]

env:
  TF_VERSION: 1.5.6
  environment: dev

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: ${{ steps.tf-outputs.outputs.apigw_url }}

    steps:
      - name: checkout the repo and building the Backend
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - name: terraform apply
        run: |
          cd src/terraform
          cat <<EOF > backend.hcl
          bucket = "${{ vars.S3_BACKEND_NAME }}"
          key = "${{ vars.LICENSEPLATE }}/${{ env.environment }}/serverless-sample-app.tfstate"
          dynamodb_table = "${{ vars.DYNAMO_DB_TABLE_NAME }}"
          EOF

          terraform init -backend-config=backend.hcl
          terraform apply -auto-approve

      - name: Extract outputs from Terraform
        id: tf-outputs
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          OUTPUTS=$(terraform output -json)
          echo "::set-output name=apigw_url::$(echo $OUTPUTS | jq -r '.apigw_url.value')"
          echo "::set-output name=cf_distribution_id::$(echo $OUTPUTS | jq -r '.cloudfront.value.distribution_id')"
          echo "::set-output name=s3_bucket_arn::$(echo $OUTPUTS | jq -r '.s3_bucket_arn.value')"
          # You may need to install jq in your GitHub Actions runner if it's not available
        working-directory: src/terraform

      - name: Build the front-end
        run: |
          cd src/ui
          npm install
          npm run build
          aws cloudfront create-invalidation --distribution-id ${{ steps.tf-outputs.outputs.cf_distribution_id }} --paths "/*"
          # The bucket name is extracted from the ARN. 
          # Example: If ARN is arn:aws:s3:::mybucket, bucket name is mybucket.
          aws s3 sync --delete ./build s3://$(echo "${{ steps.tf-outputs.outputs.s3_bucket_arn }}" | cut -d: -f6)
        env:
          REACT_APP_API_URL: ${{ steps.tf-outputs.outputs.apigw_url }}
