name: Pull Request

on:
  pull_request:
    branches: [main, test, dev]

env:
  TF_VERSION: 1.5.6

permissions:
  id-token: write # This is required for requesting the JWT and AWS credentials using AssumeRoleWithWebIdentity
  contents: read # This is required for actions/checkout

jobs:
  env_selector:
    runs-on: ubuntu-latest
    steps:
      - name: env selector
        id: identify
        run: |
          if [ ${GITHUB_BASE_REF} = "main" ];then export github_env='prod'; else export github_env=${GITHUB_BASE_REF}; fi
          echo "name=${github_env}" >> "$GITHUB_ENV"

    outputs:
      github_env: ${{ env.name }}

  build_and_plan:
    needs: env_selector
    environment: ${{ needs.env_selector.outputs.github_env }}
    runs-on: ubuntu-latest

    steps:
      - name: checkout the repo and building the Backend
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - name: terraform plan
        run: |
          cd src/terraform
          cat <<EOF > backend.hcl
          bucket = "${{ vars.S3_BACKEND_NAME }}"
          key = "${{ vars.LICENSEPLATE }}/${{ env.environment }}/serverless-sample-app.tfstate"
          dynamodb_table = "${{ vars.DYNAMO_DB_TABLE_NAME }}"
          EOF

          terraform init -backend-config=backend.hcl
          terraform plan

      - name: Build the front-end
        run: |
          cd src/ui
          npm install
          npm run build
